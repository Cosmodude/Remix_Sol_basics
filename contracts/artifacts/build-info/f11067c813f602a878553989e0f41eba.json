{
	"id": "f11067c813f602a878553989e0f41eba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Lesson3_Fund.sol": {
				"content": "// SPDX-license-Identifier: MIT\r\n\r\npragma solidity >= 0.6.6 < 0.9.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\r\ncontract Fundme{\r\n    using SafeMathChainlink for uint256;\r\n\r\n    mapping (address => uint256) public addrToamount;\r\n\r\n    address public owner;\r\n    constructor() public {\r\n        owner= msg.sender;\r\n    }\r\n\r\n    modifier OnlyOwner {\r\n        require(msg.sender==owner,\"wrong person\");\r\n        _;\r\n    }\r\n    function Fund() public payable {\r\n            uint256 min =5 *10**18;\r\n            /*if (msg.value < min){\r\n                revert();\r\n            }*/\r\n            require(GetConversionRate(msg.value) >= min, \"Send more\");\r\n            addrToamount[msg.sender]+= msg.value;\r\n            // What is the exchange rate?\r\n    }\r\n\r\n    function Withdraw() public payable OnlyOwner {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    function GetPrice() public view returns(uint256)\r\n    {\r\n        AggregatorV3Interface PriceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n        (   ,\r\n            int price,,,) =PriceFeed.latestRoundData();\r\n        return uint256(price*10**10);\r\n    }\r\n\r\n    function GetConversionRate(uint256 ETH) public view returns(uint256) {\r\n        uint256 ETHPrice = GetPrice();\r\n        uint256 USD=(ETHPrice* ETH)/(10**18);\r\n        return USD;\r\n    }\r\n\r\n     function GetVersion() public view returns (uint256)\r\n    {\r\n        AggregatorV3Interface PriceFeed =  AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n        return PriceFeed.version();\r\n    }\r\n}"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x7171939fd22c628f15406eda07bb4de4f0fda4808790f8334e5b9e1a7ca90f8a\",\"urls\":[\"bzz-raw://b085262fc0889ef3079b0abbe56aa009550f50c7976a67a21c1617fdda2504ce\",\"dweb:/ipfs/QmdqjNoPJsdgH7CN1x2yoroFQsdNNg16woFasSQXR83sWU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Lesson3_Fund.sol": {
				"Fundme": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ETH",
									"type": "uint256"
								}
							],
							"name": "GetConversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GetVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addrToamount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Lesson3_Fund.sol\":220:1678  contract Fundme{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Lesson3_Fund.sol\":370:427  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Lesson3_Fund.sol\":370:427  constructor() public {\r... */\n  pop\n    /* \"contracts/Lesson3_Fund.sol\":409:419  msg.sender */\n  caller\n    /* \"contracts/Lesson3_Fund.sol\":402:407  owner */\n  0x01\n  0x00\n    /* \"contracts/Lesson3_Fund.sol\":402:419  owner= msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Lesson3_Fund.sol\":220:1678  contract Fundme{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Lesson3_Fund.sol\":220:1678  contract Fundme{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x793b233b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x793b233b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8789aaad\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc6129a5a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x57ea89b6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6ce1417e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6d90164e\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Lesson3_Fund.sol\":863:969  function Withdraw() public payable OnlyOwner {\r... */\n    tag_2:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/Lesson3_Fund.sol\":532:855  function Fund() public payable {\r... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Lesson3_Fund.sol\":977:1260  function GetPrice() public view returns(uint256)\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/Lesson3_Fund.sol\":977:1260  function GetPrice() public view returns(uint256)\r... */\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lesson3_Fund.sol\":1268:1453  function GetConversionRate(uint256 ETH) public view returns(uint256) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"contracts/Lesson3_Fund.sol\":1268:1453  function GetConversionRate(uint256 ETH) public view returns(uint256) {\r... */\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_19:\n        /* \"contracts/Lesson3_Fund.sol\":1268:1453  function GetConversionRate(uint256 ETH) public view returns(uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lesson3_Fund.sol\":286:334  mapping (address => uint256) public addrToamount */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/Lesson3_Fund.sol\":286:334  mapping (address => uint256) public addrToamount */\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_23:\n        /* \"contracts/Lesson3_Fund.sol\":286:334  mapping (address => uint256) public addrToamount */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lesson3_Fund.sol\":343:363  address public owner */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/Lesson3_Fund.sol\":343:363  address public owner */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lesson3_Fund.sol\":1462:1675  function GetVersion() public view returns (uint256)\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"contracts/Lesson3_Fund.sol\":1462:1675  function GetVersion() public view returns (uint256)\r... */\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lesson3_Fund.sol\":863:969  function Withdraw() public payable OnlyOwner {\r... */\n    tag_11:\n        /* \"contracts/Lesson3_Fund.sol\":485:490  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lesson3_Fund.sol\":473:490  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lesson3_Fund.sol\":473:483  msg.sender */\n      caller\n        /* \"contracts/Lesson3_Fund.sol\":473:490  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Lesson3_Fund.sol\":465:506  require(msg.sender==owner,\"wrong person\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e6720706572736f6e0000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"contracts/Lesson3_Fund.sol\":919:929  msg.sender */\n      caller\n        /* \"contracts/Lesson3_Fund.sol\":919:938  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lesson3_Fund.sol\":919:961  msg.sender.transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/Lesson3_Fund.sol\":939:960  address(this).balance */\n      selfbalance\n        /* \"contracts/Lesson3_Fund.sol\":919:961  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/Lesson3_Fund.sol\":919:961  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":863:969  function Withdraw() public payable OnlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":532:855  function Fund() public payable {\r... */\n    tag_13:\n        /* \"contracts/Lesson3_Fund.sol\":578:589  uint256 min */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":591:600  5 *10**18 */\n      0x4563918244f40000\n        /* \"contracts/Lesson3_Fund.sol\":578:600  uint256 min =5 *10**18 */\n      swap1\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":736:739  min */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":704:732  GetConversionRate(msg.value) */\n      tag_37\n        /* \"contracts/Lesson3_Fund.sol\":722:731  msg.value */\n      callvalue\n        /* \"contracts/Lesson3_Fund.sol\":704:721  GetConversionRate */\n      tag_20\n        /* \"contracts/Lesson3_Fund.sol\":704:732  GetConversionRate(msg.value) */\n      jump\t// in\n    tag_37:\n        /* \"contracts/Lesson3_Fund.sol\":704:739  GetConversionRate(msg.value) >= min */\n      lt\n      iszero\n        /* \"contracts/Lesson3_Fund.sol\":696:753  require(GetConversionRate(msg.value) >= min, \"Send more\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x53656e64206d6f72650000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"contracts/Lesson3_Fund.sol\":795:804  msg.value */\n      callvalue\n        /* \"contracts/Lesson3_Fund.sol\":768:780  addrToamount */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":768:792  addrToamount[msg.sender] */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":781:791  msg.sender */\n      caller\n        /* \"contracts/Lesson3_Fund.sol\":768:792  addrToamount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":768:804  addrToamount[msg.sender]+= msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":532:855  function Fund() public payable {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":977:1260  function GetPrice() public view returns(uint256)\r... */\n    tag_16:\n        /* \"contracts/Lesson3_Fund.sol\":1017:1024  uint256 */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":1042:1073  AggregatorV3Interface PriceFeed */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":1098:1140  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/Lesson3_Fund.sol\":1042:1141  AggregatorV3Interface PriceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1171:1180  int price */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":1186:1195  PriceFeed */\n      dup2\n        /* \"contracts/Lesson3_Fund.sol\":1186:1211  PriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/Lesson3_Fund.sol\":1186:1213  PriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"contracts/Lesson3_Fund.sol\":1186:1213  PriceFeed.latestRoundData() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/Lesson3_Fund.sol\":1186:1213  PriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:18   */\n      0xa0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_43:\n        /* \"contracts/Lesson3_Fund.sol\":1186:1213  PriceFeed.latestRoundData() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1152:1213  (   ,\r... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1245:1251  10**10 */\n      0x02540be400\n        /* \"contracts/Lesson3_Fund.sol\":1239:1244  price */\n      dup2\n        /* \"contracts/Lesson3_Fund.sol\":1239:1251  price*10**10 */\n      mul\n        /* \"contracts/Lesson3_Fund.sol\":1224:1252  return uint256(price*10**10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":977:1260  function GetPrice() public view returns(uint256)\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":1268:1453  function GetConversionRate(uint256 ETH) public view returns(uint256) {\r... */\n    tag_20:\n        /* \"contracts/Lesson3_Fund.sol\":1328:1335  uint256 */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":1348:1364  uint256 ETHPrice */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":1367:1377  GetPrice() */\n      tag_45\n        /* \"contracts/Lesson3_Fund.sol\":1367:1375  GetPrice */\n      tag_16\n        /* \"contracts/Lesson3_Fund.sol\":1367:1377  GetPrice() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Lesson3_Fund.sol\":1348:1377  uint256 ETHPrice = GetPrice() */\n      swap1\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1388:1399  uint256 USD */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":1417:1423  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Lesson3_Fund.sol\":1411:1414  ETH */\n      dup5\n        /* \"contracts/Lesson3_Fund.sol\":1401:1409  ETHPrice */\n      dup4\n        /* \"contracts/Lesson3_Fund.sol\":1401:1414  ETHPrice* ETH */\n      mul\n        /* \"contracts/Lesson3_Fund.sol\":1400:1424  (ETHPrice* ETH)/(10**18) */\n      dup2\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n      div\n        /* \"contracts/Lesson3_Fund.sol\":1388:1424  uint256 USD=(ETHPrice* ETH)/(10**18) */\n      swap1\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1442:1445  USD */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":1435:1445  return USD */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1268:1453  function GetConversionRate(uint256 ETH) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":286:334  mapping (address => uint256) public addrToamount */\n    tag_24:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":343:363  address public owner */\n    tag_27:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Lesson3_Fund.sol\":1462:1675  function GetVersion() public view returns (uint256)\r... */\n    tag_30:\n        /* \"contracts/Lesson3_Fund.sol\":1505:1512  uint256 */\n      0x00\n        /* \"contracts/Lesson3_Fund.sol\":1530:1561  AggregatorV3Interface PriceFeed */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":1587:1629  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/Lesson3_Fund.sol\":1530:1630  AggregatorV3Interface PriceFeed =  AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1648:1657  PriceFeed */\n      dup1\n        /* \"contracts/Lesson3_Fund.sol\":1648:1665  PriceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"contracts/Lesson3_Fund.sol\":1648:1667  PriceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/Lesson3_Fund.sol\":1648:1667  PriceFeed.version() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"contracts/Lesson3_Fund.sol\":1648:1667  PriceFeed.version() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_51:\n        /* \"contracts/Lesson3_Fund.sol\":1648:1667  PriceFeed.version() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1641:1667  return PriceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"contracts/Lesson3_Fund.sol\":1462:1675  function GetVersion() public view returns (uint256)\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e44e60b3d1bd20604808d714a62ff489a5bc95985722014999449b21229e102a64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105ee806100616000396000f3fe6080604052600436106100705760003560e01c8063793b233b1161004e578063793b233b146100b45780638789aaad146101035780638da5cb5b14610168578063c6129a5a146101bf57610070565b806357ea89b6146100755780636ce1417e1461007f5780636d90164e14610089575b600080fd5b61007d6101ea565b005b6100876102f6565b005b34801561009557600080fd5b5061009e6103d0565b6040518082815260200191505060405180910390f35b3480156100c057600080fd5b506100ed600480360360208110156100d757600080fd5b81019080803590602001909291905050506104aa565b6040518082815260200191505060405180910390f35b34801561010f57600080fd5b506101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d9565b6040518082815260200191505060405180910390f35b34801561017457600080fd5b5061017d6104f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101cb57600080fd5b506101d4610517565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f77726f6e6720706572736f6e000000000000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102f3573d6000803e3d6000fd5b50565b6000674563918244f4000090508061030d346104aa565b1015610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f53656e64206d6f7265000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d60a081101561045c57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b6000806104b56103d0565b90506000670de0b6b3a7640000848302816104cc57fe5b0490508092505050919050565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561057757600080fd5b505afa15801561058b573d6000803e3d6000fd5b505050506040513d60208110156105a157600080fd5b81019080805190602001909291905050509150509056fea2646970667358221220e44e60b3d1bd20604808d714a62ff489a5bc95985722014999449b21229e102a64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5EE DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x793B233B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x793B233B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8789AAAD EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xC6129A5A EQ PUSH2 0x1BF JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x6CE1417E EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x6D90164E EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH2 0x2F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E6720706572736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x4563918244F40000 SWAP1 POP DUP1 PUSH2 0x30D CALLVALUE PUSH2 0x4AA JUMP JUMPDEST LT ISZERO PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x53656E64206D6F72650000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4B5 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x4CC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x4E PUSH1 0xB3 0xD1 0xBD KECCAK256 PUSH1 0x48 ADDMOD 0xD7 EQ 0xA6 0x2F DELEGATECALL DUP10 0xA5 0xBC SWAP6 SWAP9 JUMPI 0x22 ADD 0x49 SWAP10 DIFFICULTY SWAP12 0x21 0x22 SWAP15 LT 0x2A PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "220:1458:2:-:0;;;370:57;5:9:-1;2:2;;;27:1;24;17:12;2:2;370:57:2;409:10;402:5;;:17;;;;;;;;;;;;;;;;;;220:1458;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063793b233b1161004e578063793b233b146100b45780638789aaad146101035780638da5cb5b14610168578063c6129a5a146101bf57610070565b806357ea89b6146100755780636ce1417e1461007f5780636d90164e14610089575b600080fd5b61007d6101ea565b005b6100876102f6565b005b34801561009557600080fd5b5061009e6103d0565b6040518082815260200191505060405180910390f35b3480156100c057600080fd5b506100ed600480360360208110156100d757600080fd5b81019080803590602001909291905050506104aa565b6040518082815260200191505060405180910390f35b34801561010f57600080fd5b506101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104d9565b6040518082815260200191505060405180910390f35b34801561017457600080fd5b5061017d6104f1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101cb57600080fd5b506101d4610517565b6040518082815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f77726f6e6720706572736f6e000000000000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102f3573d6000803e3d6000fd5b50565b6000674563918244f4000090508061030d346104aa565b1015610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f53656e64206d6f7265000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d60a081101561045c57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b6000806104b56103d0565b90506000670de0b6b3a7640000848302816104cc57fe5b0490508092505050919050565b60006020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561057757600080fd5b505afa15801561058b573d6000803e3d6000fd5b505050506040513d60208110156105a157600080fd5b81019080805190602001909291905050509150509056fea2646970667358221220e44e60b3d1bd20604808d714a62ff489a5bc95985722014999449b21229e102a64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x793B233B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x793B233B EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8789AAAD EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xC6129A5A EQ PUSH2 0x1BF JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x57EA89B6 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x6CE1417E EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x6D90164E EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH2 0x2F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E6720706572736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x4563918244F40000 SWAP1 POP DUP1 PUSH2 0x30D CALLVALUE PUSH2 0x4AA JUMP JUMPDEST LT ISZERO PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x53656E64206D6F72650000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4B5 PUSH2 0x3D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x4CC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x4E PUSH1 0xB3 0xD1 0xBD KECCAK256 PUSH1 0x48 ADDMOD 0xD7 EQ 0xA6 0x2F DELEGATECALL DUP10 0xA5 0xBC SWAP6 SWAP9 JUMPI 0x22 ADD 0x49 SWAP10 DIFFICULTY SWAP12 0x21 0x22 SWAP15 LT 0x2A PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "220:1458:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;863:106:2;;;:::i;:::-;;532:323;;;:::i;:::-;;977:283;;5:9:-1;2:2;;;27:1;24;17:12;2:2;977:283:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1268:185;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1268:185:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1268:185:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;286:48;;5:9:-1;2:2;;;27:1;24;17:12;2:2;286:48:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;286:48:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;343:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;343:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1462:213;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1462:213:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;863:106;485:5;;;;;;;;;;;473:17;;:10;:17;;;465:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:10:::1;:19;;:42;939:21;919:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;919:42:2;863:106::o:0;532:323::-;578:11;591:9;578:22;;736:3;704:28;722:9;704:17;:28::i;:::-;:35;;696:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:9;768:12;:24;781:10;768:24;;;;;;;;;;;;;;;;:36;;;;;;;;;;;532:323;:::o;977:283::-;1017:7;1042:31;1098:42;1042:99;;1171:9;1186;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1186:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1186:27:2;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1186:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:61;;;;;;1245:6;1239:5;:12;1224:28;;;;977:283;:::o;1268:185::-;1328:7;1348:16;1367:10;:8;:10::i;:::-;1348:29;;1388:11;1417:6;1411:3;1401:8;:13;1400:24;;;;;;1388:36;;1442:3;1435:10;;;;1268:185;;;:::o;286:48::-;;;;;;;;;;;;;;;;;:::o;343:20::-;;;;;;;;;;;;;:::o;1462:213::-;1505:7;1530:31;1587:42;1530:100;;1648:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1648:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1648:19:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1648:19:2;;;;;;;;;;;;;;;;1641:26;;;1462:213;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "303600",
								"executionCost": "21209",
								"totalCost": "324809"
							},
							"external": {
								"Fund()": "infinite",
								"GetConversionRate(uint256)": "infinite",
								"GetPrice()": "infinite",
								"GetVersion()": "infinite",
								"Withdraw()": "infinite",
								"addrToamount(address)": "1191",
								"owner()": "1097"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 370,
									"end": 427,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 370,
									"end": 427,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 409,
									"end": 419,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 407,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 419,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 402,
									"end": 419,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 419,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 419,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 402,
									"end": 419,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1678,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e44e60b3d1bd20604808d714a62ff489a5bc95985722014999449b21229e102a64736f6c63430006060033",
									".code": [
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "793B233B"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "793B233B"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "8789AAAD"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "C6129A5A"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "57EA89B6"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "6CE1417E"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "6D90164E"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 863,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 863,
											"end": 969,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 532,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 532,
											"end": 855,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 343,
											"end": 363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 863,
											"end": 969,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 863,
											"end": 969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 473,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 473,
											"end": 483,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 473,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 473,
											"end": 490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 473,
											"end": 490,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "77726F6E6720706572736F6E0000000000000000000000000000000000000000"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 465,
											"end": 506,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 465,
											"end": 506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 929,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 919,
											"end": 938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 939,
											"end": 960,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 919,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 863,
											"end": 969,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 532,
											"end": 855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "4563918244F40000"
										},
										{
											"begin": 578,
											"end": 600,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 578,
											"end": 600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 722,
											"end": 731,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 704,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 739,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 704,
											"end": 739,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "53656E64206D6F72650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 696,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 696,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 795,
											"end": 804,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 768,
											"end": 780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 781,
											"end": 791,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 792,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 768,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 768,
											"end": 804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 855,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1140,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 1042,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1042,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "2540BE400"
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1260,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1367,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1411,
											"end": 1414,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1414,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1424,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1453,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 286,
											"end": 334,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 343,
											"end": 363,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1629,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 1530,
											"end": 1630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1665,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1675,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Fund()": "6ce1417e",
							"GetConversionRate(uint256)": "793b233b",
							"GetPrice()": "6d90164e",
							"GetVersion()": "c6129a5a",
							"Withdraw()": "57ea89b6",
							"addrToamount(address)": "8789aaad",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ETH\",\"type\":\"uint256\"}],\"name\":\"GetConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addrToamount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Lesson3_Fund.sol\":\"Fundme\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x7171939fd22c628f15406eda07bb4de4f0fda4808790f8334e5b9e1a7ca90f8a\",\"urls\":[\"bzz-raw://b085262fc0889ef3079b0abbe56aa009550f50c7976a67a21c1617fdda2504ce\",\"dweb:/ipfs/QmdqjNoPJsdgH7CN1x2yoroFQsdNNg16woFasSQXR83sWU\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/Lesson3_Fund.sol\":{\"keccak256\":\"0x0bcd1ccbef00b7d6d4a684e076b697c04c400bc841d5913a35a80212a2937fdd\",\"urls\":[\"bzz-raw://72982889bc603d6398311e727cf821146ad884bbbb861d310a98ab01c70964cd\",\"dweb:/ipfs/QmeT3R1RWc2WAWyLNE7PHJwXuCsDFos21jZ9k7QMtFjYYe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 195,
								"contract": "contracts/Lesson3_Fund.sol:Fundme",
								"label": "addrToamount",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 197,
								"contract": "contracts/Lesson3_Fund.sol:Fundme",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 6,
												"src": "156:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:19:0"
									},
									"scope": 45,
									"src": "94:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "237:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:27:0"
									},
									"scope": 45,
									"src": "172:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:21:0"
									},
									"scope": 45,
									"src": "261:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "367:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "451:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "451:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "472:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "497:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "522:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "421:129:0"
									},
									"scope": 45,
									"src": "340:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "692:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "717:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "616:129:0"
									},
									"scope": 45,
									"src": "555:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:692:0"
						}
					],
					"src": "32:718:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							184
						]
					},
					"id": 185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:1",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "930:95:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 73,
														"src": "936:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "948:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 65,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "967:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "959:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "1019:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 72,
												"nodeType": "Return",
												"src": "1012:8:1"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:1",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `+` operator.\n    * Requirements:\n- Addition cannot overflow."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "876:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "921:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:1"
									},
									"scope": 184,
									"src": "863:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1344:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1358:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1363:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:1"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 99,
														"src": "1405:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1417:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1421:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "1436:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 98,
												"nodeType": "Return",
												"src": "1429:8:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n    * Counterpart to Solidity's `-` operator.\n    * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1290:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1301:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1335:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:1"
									},
									"scope": 184,
									"src": "1277:165:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1737:351:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1948:35:1",
												"trueBody": {
													"id": 115,
													"nodeType": "Block",
													"src": "1960:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 109,
															"id": 114,
															"nodeType": "Return",
															"src": "1968:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 134,
														"src": "1989:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2001:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2005:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2024:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2029:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 133,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:1",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `*` operator.\n    * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1683:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1694:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1728:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:1"
									},
									"scope": 184,
									"src": "1670:418:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2596:237:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:1"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 160,
														"src": "2714:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2726:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2730:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2827:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 159,
												"nodeType": "Return",
												"src": "2820:8:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:1",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2542:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2553:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2587:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:1"
									},
									"scope": 184,
									"src": "2529:304:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3330:72:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3344:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3392:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 179,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "3396:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 181,
												"nodeType": "Return",
												"src": "3385:12:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3321:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:1"
									},
									"scope": 184,
									"src": "3263:139:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 185,
							"src": "621:2783:1"
						}
					],
					"src": "32:3373:1"
				},
				"id": 1
			},
			"contracts/Lesson3_Fund.sol": {
				"ast": {
					"absolutePath": "contracts/Lesson3_Fund.sol",
					"exportedSymbols": {
						"Fundme": [
							337
						]
					},
					"id": 338,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:33:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 187,
							"nodeType": "ImportDirective",
							"scope": 338,
							"sourceUnit": 46,
							"src": "72:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 188,
							"nodeType": "ImportDirective",
							"scope": 338,
							"sourceUnit": 185,
							"src": "150:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 337,
							"linearizedBaseContracts": [
								337
							],
							"name": "Fundme",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 191,
									"libraryName": {
										"contractScope": null,
										"id": 189,
										"name": "SafeMathChainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 184,
										"src": "248:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathChainlink_$184",
											"typeString": "library SafeMathChainlink"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "242:36:2",
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "270:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8789aaad",
									"id": 195,
									"mutability": "mutable",
									"name": "addrToamount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 337,
									"src": "286:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "295:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "286:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "306:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 197,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 337,
									"src": "343:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 196,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "343:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "391:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 200,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "402:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 201,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "409:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "409:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "402:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "402:17:2"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:0:2"
									},
									"scope": 337,
									"src": "370:57:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "454:72:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 209,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "473:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "473:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 211,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "485:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "473:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e6720706572736f6e",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "491:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8720ee5f29d3c6dfd04fc0595a057cafc6ce3483d0677b8b44976b39b7b7ced3",
																"typeString": "literal_string \"wrong person\""
															},
															"value": "wrong person"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8720ee5f29d3c6dfd04fc0595a057cafc6ce3483d0677b8b44976b39b7b7ced3",
																"typeString": "literal_string \"wrong person\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "465:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "465:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "465:41:2"
											},
											{
												"id": 216,
												"nodeType": "PlaceholderStatement",
												"src": "517:1:2"
											}
										]
									},
									"documentation": null,
									"id": 218,
									"name": "OnlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:2"
									},
									"src": "435:91:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "563:292:2",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "min",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 247,
														"src": "578:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "578:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_5000000000000000000_by_1",
														"typeString": "int_const 5000000000000000000"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "591:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "594:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3138",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "598:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "594:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "591:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5000000000000000000_by_1",
														"typeString": "int_const 5000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "578:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 231,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "722:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "722:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 230,
																	"name": "GetConversionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "704:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "704:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 234,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "736:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "704:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "53656e64206d6f7265",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "741:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b081f1821f4951b6b33708274e783ef58b31a2bf7b52132c74c4ce1918b50110",
																"typeString": "literal_string \"Send more\""
															},
															"value": "Send more"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b081f1821f4951b6b33708274e783ef58b31a2bf7b52132c74c4ce1918b50110",
																"typeString": "literal_string \"Send more\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "696:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "696:57:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 239,
															"name": "addrToamount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "768:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 242,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "781:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "781:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "768:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 243,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "795:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "795:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "768:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "768:36:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6ce1417e",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:2:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:0:2"
									},
									"scope": 337,
									"src": "532:323:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "908:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 260,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "947:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Fundme_$337",
																			"typeString": "contract Fundme"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Fundme_$337",
																			"typeString": "contract Fundme"
																		}
																	],
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "939:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 258,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "939:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "939:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "939:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "919:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "919:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "919:42:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "57ea89b6",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 251,
											"modifierName": {
												"argumentTypes": null,
												"id": 250,
												"name": "OnlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 218,
												"src": "898:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "898:9:2"
										}
									],
									"name": "Withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:2"
									},
									"scope": 337,
									"src": "863:106:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1031:229:2",
										"statements": [
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "PriceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 292,
														"src": "1042:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 271,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "1042:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1098:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 273,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1076:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1042:99:2"
											},
											{
												"assignments": [
													null,
													278,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 292,
														"src": "1171:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 277,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1171:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 282,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 279,
															"name": "PriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "1186:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1186:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1152:61:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 285,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1239:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1245:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1249:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1245:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															},
															"src": "1239:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1231:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1231:7:2",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 291,
												"nodeType": "Return",
												"src": "1224:28:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6d90164e",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:2:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "1017:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1016:9:2"
									},
									"scope": 337,
									"src": "977:283:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "1337:116:2",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "ETHPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 319,
														"src": "1348:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 302,
														"name": "GetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1367:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:29:2"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "USD",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 319,
														"src": "1388:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 307,
																	"name": "ETHPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "1401:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 308,
																	"name": "ETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "1411:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1401:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 310,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1400:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1417:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3138",
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1421:2:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1417:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"id": 314,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1416:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1400:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1388:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"name": "USD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 306,
													"src": "1442:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 318,
												"nodeType": "Return",
												"src": "1435:10:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "793b233b",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetConversionRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "ETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "1295:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1294:13:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 320,
												"src": "1328:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1327:9:2"
									},
									"scope": 337,
									"src": "1268:185:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1519:156:2",
										"statements": [
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "PriceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 335,
														"src": "1530:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 325,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "1530:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 327,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1565:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1565:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1530:100:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 331,
															"name": "PriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "1648:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "1648:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1648:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 324,
												"id": 334,
												"nodeType": "Return",
												"src": "1641:26:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c6129a5a",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1481:2:2"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "1505:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1504:9:2"
									},
									"scope": 337,
									"src": "1462:213:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 338,
							"src": "220:1458:2"
						}
					],
					"src": "35:1643:2"
				},
				"id": 2
			}
		}
	}
}